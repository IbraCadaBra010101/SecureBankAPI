@using RealEstateAPI.Services
@inherits LayoutComponentBase
@implements IDisposable
@inject TitleService TitleService

<div class="page-wrapper">
    <header>
        <nav class="navbar navbar-expand-lg navbar-dark bg-brand">
            <div class="container">
                <div class="navbar-brand-section">
                    @if (!string.IsNullOrEmpty(CurrentPageTitle))
                    {
                        <span class="navbar-subtitle">@CurrentPageTitle</span>
                    }
                </div>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
                        <li class="nav-item"><a class="nav-link" href="/">Dashboard</a></li>
                        <li class="nav-item"><a class="nav-link" href="/swagger" target="_blank">API Docs</a></li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <main class="container">
        @Body
    </main>
</div>

@code {
    private string? CurrentPageTitle { get; set; }
    
    protected override void OnInitialized()
    {
        TitleService.TitleChanged += OnTitleChanged;
    }
    
    private void OnTitleChanged(object? sender, string title)
    {
        CurrentPageTitle = title;
        InvokeAsync(StateHasChanged);
    }
    
    public void Dispose()
    {
        TitleService.TitleChanged -= OnTitleChanged;
    }
}

